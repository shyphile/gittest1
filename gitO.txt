安装完成后 配置使用者参数
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

在空文件夹里 初始化成空的版本库
$ git init

保存修改到暂存区
$ git add fileName.txt

将保存到暂存区的修改提交到分支上存储
$ git commit -m "修改说明"

查看仓库当前的状态
git status

看版本库与工作区内容的不同
$ git diff readme.txt 

查看提交的各个版本
git log
git log --pretty=oneline 简化查看各个版本

退回到上一个版本
$ git reset --hard HEAD^

退回到上N处版本
$ git reset --hard HEAD~N

根据commit id 回退指定版本
例:$ git reset --hard 3628164

查询每一次命令 可以找回已经失踪的commit id 以便退回的版本往前进
$ git reflog

丢弃工作区的更改  如果工作区内容修改前暂存区是空的 就恢复到版本库里最近的一个版本;如果修改前暂存区有内容 就恢复成暂存区存储的内容  
例:$ git checkout -- gitO.txt

还有一种情况 是修改已经提交到暂存区 未提交到版本库的 用以下命令删除暂存区提交的内容,本地修改的内容不变.
例:$ git reset HEAD gitO.txt